<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers class="vector"/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>
VERSION=0.0.1
if [ -f /etc/pacifica/jenkins.sh ]; then . /etc/pacifica/jenkins.sh; fi
cat /var/lib/jenkins/jobs/myemsl-core/workspace/DIST/epel-5-x86_64/src/examples/pacifica-virtual-appliance.tdl | sed 's^#export http_proxy=.*^export http_proxy="http://user:'`cat /var/lib/jenkins/squidpw | python -c "import urllib; import sys; print urllib.quote(sys.stdin.readline().strip(),safe='')"`'@192.168.123.1:3128"^' > pacifica-virtual-appliance.tdl
env
sudo /usr/bin/oz-install -d3 -u -p -s `pwd`/pacifica-virtual-appliance-$VERSION.dsk -t 10000 -x pacifica-vertual-appliance.xml pacifica-virtual-appliance.tdl
virt-copy-out -a pacifica-virtual-appliance-$VERSION.dsk /root/setup.log .
virt-copy-out -a pacifica-virtual-appliance-$VERSION.dsk /root/setup.ok .
if [ `cat setup.ok` -ne 0 ]; then
    cat setup.log
    exit 1
fi
qemu-img convert -c -f raw -O qcow2 pacifica-virtual-appliance-$VERSION.dsk pacifica-virtual-appliance-$VERSION.qcow2
qemu-img convert -f raw -O vmdk pacifica-virtual-appliance-$VERSION.dsk pacifica-virtual-appliance-$VERSION.vmdk
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>pacifica-virtual-appliance-*.qcow2, pacifica-virtual-appliance-*.vmdk</artifacts>
      <latestOnly>true</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers/>
</project>
  
