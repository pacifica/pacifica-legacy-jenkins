<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.security.AuthorizationMatrixProperty>
      <permission>hudson.model.Item.Read:anonymous</permission>
      <permission>hudson.model.Item.Discover:anonymous</permission>
      <permission>hudson.model.Item.Workspace:anonymous</permission>
    </hudson.security.AuthorizationMatrixProperty>
    <hudson.queueSorter.PrioritySorterJobProperty plugin="PrioritySorter@1.3">
      <priority>100</priority>
    </hudson.queueSorter.PrioritySorterJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>pacifica</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>H H * * *</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>export MOCK=/usr/bin/mock
export MOCKDISTPREFIX=
export REPOBASEDIR=/var/lib/jenkins
export CREATEREPOOPTS='-s sha'
if [ -f /etc/pacifica/jenkins.sh ]; then . /etc/pacifica/jenkins.sh; fi
$MOCK -r atrpms-epel-5-x86_64 --init
$MOCK -r atrpms-epel-5-x86_64 --install qt47-webkit-devel sqlite sqlite-devel libgpg-error-devel
mkdir -p "$REPOBASEDIR"/epel-5-x86_64/
cp -af /var/cache/mock/atrpms-epel-5-x86_64/yum_cache/atrpms-testing/packages/*.rpm "$REPOBASEDIR"/epel-5-x86_64/
rm -f "$REPOBASEDIR"/epel-5-x86_64/libgpg-error-*.rpm
selinuxenabled &amp;&amp; chcon system_u:object_r:var_lib_t:s0 "$REPOBASEDIR"/epel-5-x86_64/*.rpm
createrepo $CREATEREPOOPTS "$REPOBASEDIR"/epel-5-x86_64/
$MOCK -r atrpms-epel-5-x86_64 --clean
rm -rf repo
mkdir -p repo
cp -af /var/cache/mock/atrpms-epel-5-x86_64/yum_cache/atrpms-testing/packages/*.rpm repo/
createrepo $CREATEREPOOPTS repo
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>repo/**</artifacts>
      <latestOnly>true</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers/>
</project>
  
